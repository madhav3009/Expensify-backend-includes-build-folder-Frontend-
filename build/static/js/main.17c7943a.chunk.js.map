{"version":3,"sources":["TodoForm.js","Todo.js","TodoList.js","App.js","serviceWorker.js","index.js"],"names":["TodoForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeDate","date","setState","startDate","state","task","amount","category","handleChange","bind","assertThisInitialized","handleSubmit","evt","defineProperty","target","name","value","e","preventDefault","createTodo","objectSpread","id","uuid","completed","console","log","Axios","post","data","then","response","catch","error","finally","react_default","a","createElement","className","onSubmit","required","htmlFor","type","placeholder","onChange","class","aria-hidden","react_datepicker_min_default","selected","Component","Todo","isEditing","handleRemove","handleToggle","handleUpdate","handleToggleEdit","removeTodo","updateTodo","toggleTodo","onClick","TodoList","todos","create","remove","update","toggleCompletion","newTask","concat","toConsumableArray","filter","t","updatedTask","updatedTodos","map","todo","_this2","src_Todo","key","do","src_TodoForm","App","src_TodoList_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17c7943a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport uuid from 'uuid/v4'\r\nimport './todoForm.css'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Axios from 'axios';\r\n \r\nclass TodoForm extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state=({\r\n            task:\"\",amount:\" \",category:\"Personal\"\r\n         })\r\n    \r\n    this.handleChange=this.handleChange.bind(this);\r\n    this.handleSubmit=this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    \r\n   \r\n    handleChangeDate = date => {\r\n      this.setState({\r\n        startDate: date\r\n      });\r\n    };\r\n\r\n    \r\n\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n\r\nhandleSubmit(e)\r\n{\r\n    e.preventDefault();\r\n    this.props.createTodo({...this.state,id:uuid(),completed:false})\r\n    this.setState({task:\"\",amount:\"\"})\r\n  console.log(this.state)   \r\n  \r\n  Axios.post('http://localhost:8086/addExpense', {\r\n    'data':this.state\r\n  }).then(function (response) {\r\n      // handle success\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    .finally(function () {\r\n      // always executed\r\n    });\r\n    \r\n//itna time kaise lagrha h patani\r\n// apne pe krke dekhio add expense wala \r\n// browser pe bol rha h ya code krne k lye bol rha h\r\n// browser\r\n//front / backfrontfront \r\n// front pe daal dya \r\n\r\n  // back wale pe aa code p\r\n  \r\n}                              \r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className='todoForm' onSubmit={this.handleSubmit} required>\r\n            \r\n            <label htmlFor='task'>Expenditure</label>\r\n            <input\r\n            type='text' \r\n            required\r\n            placeholder='Expense'\r\n            id='task'\r\n            name='task'\r\n            value={this.state.task}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n         <label htmlFor='amount'>Amount</label>\r\n         <input\r\n         type='text' \r\n         required\r\n         placeholder='Enter In Rs'\r\n         id='amount'\r\n         name='amount'\r\n         value={this.state.amount}\r\n         onChange={this.handleChange}\r\n       />\r\n        \r\n\r\n       <div>\r\n        \r\n          <label htmlFor=\"category\" >Category</label><br /><br />\r\n          <select className=\"cat\"  name=\"category\" value={this.state.category} onChange={this.handleChange} >\r\n  \r\n          <option value=\"Personal\" >Personal</option>\r\n          <option value=\"Work\">Work</option>\r\n          <option value=\"School\">College</option>\r\n          <option value=\"Family\">Family</option>\r\n          <option value=\"Investment\">Investement</option>\r\n       </select>\r\n\r\n\r\n        <br /><br /><br />\r\n\r\n        <label name=\"date\">Pick Date</label>\r\n        <br />\r\n        <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n        \r\n        <DatePicker className=\"datePicker\"\r\n        selected={this.state.startDate}\r\n        name=\"date\"\r\n        id=\"date\"\r\n        onChange={this.handleChangeDate}\r\n        \r\n         />\r\n       </div>\r\n\r\n\r\n\r\n        <button id=\"add\">Add Expense</button> \r\n       \r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoForm;\r\n\r\n//open hogya  h\r\n","import React, { Component } from 'react';\r\nimport './todo.css'\r\n\r\nclass Todo extends Component {\r\nconstructor(props){                                  \r\n    // ab jaise jo amount hoga ya fir description hoga usko backend me kaise use kruga db me store krwane k lye \r\n    // axios.post('/addDescrtption',()=>{})yeh http request karega yaahan se get ya post \r\n    // aur backend m app.getorpost('addDescritpion',(req,res)=>{yahan pe databsae m dalega}) aise api banana hoga\r\n    // ek karke dikha dega bhai \r\n    //expense ka krke dikhaa de mai baaki ka kr luga   ok\r\n    // wo function konsa hai jisse sab data backendm jana chahiye\r\n    // bhai Add expense krne se create hote h  \r\n\r\nsuper(props);\r\n\r\nthis.state=\r\n{\r\n    isEditing:false,\r\n    task:this.props.task,\r\n    amount:this.props.amount,\r\n    category:this.props.category,\r\n    // startDate:this.props.startDate\r\n\r\n}\r\n\r\n    this.handleRemove=this.handleRemove.bind(this);\r\n    this.handleToggle=this.handleToggle.bind(this);\r\n    this.handleUpdate=this.handleUpdate.bind(this);\r\n    this.handleChange=this.handleChange.bind(this);\r\n    this.handleToggleEdit=this.handleToggleEdit.bind(this);\r\n\r\n}\r\n\r\n    \r\n    handleRemove()\r\n    {\r\n            this.props.removeTodo(this.props.id)\r\n    }\r\n\r\n\r\n\r\n    handleToggle()\r\n    {\r\n        this.setState({\r\n            isEditing:!this.state.isEditing\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleUpdate(e)\r\n    {\r\n        e.preventDefault();\r\n        this.props.updateTodo(this.props.id,this.state.task)\r\n        this.setState({isEditing:false})\r\n\r\n    }\r\n    \r\n\r\n\r\n  handleChange(evt) {\r\n    this.setState(\r\n        {\r\n      [evt.target.name]: evt.target.value\r\n    }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  handleToggleEdit()\r\n  {\r\n      this.props.toggleTodo(this.props.id)\r\n  }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let disp\r\n\r\n        if(this.state.isEditing){\r\n        \r\n        disp=(\r\n        \r\n\r\n        <form  onSubmit={this.handleUpdate}>\r\n\r\n            <input type=\"text\" required\r\n                   name=\"task\"\r\n                   value={this.state.task}\r\n                   onChange={this.handleChange}\r\n                    />\r\n\r\n            <button>SAVE</button>\r\n            </form>\r\n\r\n        );\r\n        \r\n    }\r\n       else{\r\n       disp=(\r\n            <div  className='todossss'> \r\n                \r\n                <li className={this.props.completed ?\"complete\":\"\" }onClick={this.handleToggleEdit}>{this.props.task} </li>\r\n               <br /> <span className=\"date\"><i class=\"fa fa-calendar pen\" aria-hidden=\"true\"></i>27/09/2019</span>\r\n               \r\n                <span className=\"expense\">Rs {this.props.amount}</span>\r\n                \r\n                <span className=\"cate\">{this.props.category}</span>\r\n                \r\n                <button className=\"btn\" onClick={this.handleToggle}><i class=\"fa fa-pencil pen\" aria-hidden=\"true\"></i></button>\r\n                <button  className=\"btn\" onClick={this.handleRemove}><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n            \r\n            </div>\r\n            );\r\n       }\r\n        return disp;\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n\r\n","import React, { Component } from 'react';\r\nimport TodoForm from './TodoForm'\r\nimport Todo from '../src/Todo'\r\nimport './TodoList.css'\r\n\r\n\r\n\r\nclass TodoList extends Component {\r\n    constructor(props)\r\n    {\r\n      super(props);\r\n      this.state={\r\n      todos:[],amount:[],category:[]\r\n\r\n     }\r\n     \r\n     \r\n     this.create=this.create.bind(this);\r\n     this.remove=this.remove.bind(this);\r\n     this.update=this.update.bind(this);\r\n     this.toggleCompletion=this.toggleCompletion.bind(this);\r\n    \r\n    \r\n    }\r\n\r\n\r\ncreate(newTask)\r\n{\r\n    this.setState({\r\n        todos:[...this.state.todos,newTask] ,\r\n        amount:[...this.state.amount,newTask],\r\n        category:[...this.state.category,newTask],\r\n\r\n        \r\n       \r\n    })\r\n}\r\n\r\n\r\n\r\nremove(id)\r\n{\r\n    this.setState({\r\n     todos:this.state.todos.filter(t=> t.id !== id)   \r\n\r\n    })\r\n}\r\n\r\n\r\n\r\nupdate(id,updatedTask)\r\n{\r\n\r\n    const updatedTodos = this.state.todos.map(todo => {\r\n       if(todo.id===id){\r\n       return {...todo,task:updatedTask}\r\n      }\r\n       return todo;\r\n    })\r\nthis.setState({\r\n    todos:updatedTodos\r\n})\r\n}\r\n\r\n\r\n\r\n\r\ntoggleCompletion(id)\r\n{\r\n\r\n    const updatedTodos = this.state.todos.map(todo => {\r\n       if(todo.id===id){\r\n       return {...todo,completed:!todo.completed}\r\n      }\r\n       return todo;\r\n    })\r\n\r\nthis.setState({\r\n    todos:updatedTodos\r\n})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    \r\nrender() {\r\n\r\n        const todos = this.state.todos.map(todo =>{\r\n          return <Todo \r\n                 id={todo.id} \r\n                 key={todo.id} do\r\n                 task={todo.task} \r\n                 amount={todo.amount}\r\n                 category={todo.category}\r\n                 removeTodo={this.remove}\r\n                 updateTodo={this.update}\r\n                 completed={todo.completed}\r\n                 toggleTodo={this.toggleCompletion}\r\n                 />\r\n        })\r\n        \r\n        \r\n        return (\r\n            <div className='todoList'>\r\n                \r\n                <h1>Expensify</h1>\r\n                <TodoForm createTodo={this.create} />\r\n                <ul>\r\n               {todos} \r\n               </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './TodoList'\nfunction App() {\n  return (\n    <div>\n    <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}